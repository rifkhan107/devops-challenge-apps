name: Build, Push and Deploy to EKS

on:
  push:
    branches:
      - master

jobs:
  build-push-deploy:
    name: Build, Push to ECR, and Deploy to EKS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push Web docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          WEB_IMAGE_URI="$REGISTRY/d3k6a8t8/web:$IMAGE_TAG"
          docker build -t $WEB_IMAGE_URI -f ./web/Dockerfile ./web
          docker push $WEB_IMAGE_URI
          echo "WEB_IMAGE_URI=$WEB_IMAGE_URI" >> $GITHUB_ENV

      - name: Build, tag, and push API docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          API_IMAGE_URI="$REGISTRY/d3k6a8t8/api:$IMAGE_TAG"
          docker build -t $API_IMAGE_URI -f ./api/Dockerfile ./api
          docker push $API_IMAGE_URI
          echo "API_IMAGE_URI=$API_IMAGE_URI" >> $GITHUB_ENV

          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name my-eks-cluster

      - name: Deploy to EKS
        run: |
          sed -i "s|IMAGE_URL_PLACEHOLDER_WEB|$WEB_IMAGE_URI|g" ./k8s/web-app.yaml
          sed -i "s|IMAGE_URL_PLACEHOLDER_API|$API_IMAGE_URI|g" ./k8s/api-app.yaml
          kubectl apply -f ./k8s/web-app.yaml
          kubectl apply -f ./k8s/api-app.yaml